#!/usr/bin/env ruby
require 'pathname'
require 'fileutils'
require 'io/console'

include FileUtils

# path to your application root.
APP_ROOT = Pathname.new File.expand_path('../../', __FILE__)

def system!(*args)
  system(*args) || abort("\n== Command #{args} failed ==")
end

chdir APP_ROOT do
  # This script is a starting point to setup your application.
  # Add necessary setup steps to this file.

  puts '== Installing dependencies =='
  system! 'gem install bundler --conservative'
  system('bundle check') || system!('bundle install')

  # Install JavaScript dependencies if using Yarn
  system('bin/yarn')

  puts "\n== Copying sample files =="
  unless File.exist?('config/application.yml')
    cp 'config/application.yml.example', 'config/application.yml'
  end

  puts "\n== create shared folder and setting up files =="
  unless File.exist?('shared/config/application.yml')
    mkdir 'shared'
    mkdir 'shared/config'
    cp 'config/application.yml', 'shared/config/application.yml'
    cp 'config/database.yml', 'shared/config/database.yml'
    cp 'config/secrets.yml', 'shared/config/secrets.yml'
    system! 'rm config/application.yml config/database.yml config/secrets.yml'
    system! 'ln shared/config/* config/'
  end

  puts "\nRemove git history and re-init project? (y/n)"
  input = STDIN.getch
  if input == 'y'
    puts "\n== remove .git =="
    system! 'rm -rf .git'

    puts "\n== init git =="
    system! 'git init'
    system! 'git add .'
    system! 'git commit -m ":tada: init commit"'
  else
    puts "\n== Ok, git history will not delete =="
  end

  puts "\n== Preparing database =="
  system! 'docker-compose up -d'
  puts "\n== Please wait for db setup =="
  sleep 10
  system! 'bin/rails db:setup SKIP_TRACKER=true'
  system! 'docker-compose down'

  puts "\n== Removing old logs and tempfiles =="
  system! 'bin/rails log:clear tmp:clear'

  puts "\n== Restarting application server =="
  system! 'bin/rails restart'

  puts %(\n\n\n
==============================================================
=                              dddddddd            dddddddd  =
=                              d::::::d            d::::::d  =
=                              d::::::d            d::::::d  =
=                              d::::::d            d::::::d  =
=                              d:::::d             d:::::d   =
=    ooooooooooo       ddddddddd:::::d     ddddddddd:::::d   =
=  oo:::::::::::oo   dd::::::::::::::d   dd::::::::::::::d   =
= o:::::::::::::::o d::::::::::::::::d  d::::::::::::::::d   =
= o:::::ooooo:::::od:::::::ddddd:::::d d:::::::ddddd:::::d   =
= o::::o     o::::od::::::d    d:::::d d::::::d    d:::::d   =
= o::::o     o::::od:::::d     d:::::d d:::::d     d:::::d   =
= o::::o     o::::od:::::d     d:::::d d:::::d     d:::::d   =
= o::::o     o::::od:::::d     d:::::d d:::::d     d:::::d   =
= o:::::ooooo:::::od::::::ddddd::::::ddd::::::ddddd::::::dd  =
= o:::::::::::::::o d:::::::::::::::::d d:::::::::::::::::d  =
=  oo:::::::::::oo   d:::::::::ddd::::d  d:::::::::ddd::::d  =
=    ooooooooooo      ddddddddd   ddddd   ddddddddd   ddddd  =
=                                                            =
=        Next, use `bin/server` to starting services         =
=  booting up rails server with `rails s` and start coding.  =
==============================================================
  )
end
